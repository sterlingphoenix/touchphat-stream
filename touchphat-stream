#!/usr/bin/env python3
#
# This script reads a list of streams/local files and streams/plays them. 
# It switches between streams using a Pimoroni Touch pHAT. 

# Honestly this miiight need to be cleaned up... not sure I'm using all 
# of these anu more.
import os
import signal
import subprocess
import random
from random import shuffle
from sys import exit, version_info
import syslog
import time
import socket
import touchphat

home="/home/pi/touchphat-stream/"         # Yeah, home is hardcoded. Gross.
stream_cmd=home+"streamer_helper_script"  # Helper script that does videos.
cleanup_cmd=home+"cleanup_helper_script"  # Kill all the things.
stream_file=home+"streams.dat"            # Config file with all the strreams.
key_a_file=home+"key_a.dat"               # Hotkey streams
key_b_file=home+"key_b.dat"
key_c_file=home+"key_c.dat"
key_d_file=home+"key_d.dat"
is_key=""

# Runs a script that cleans up when switching streams.
def kill_everything():
    subprocess.Popen([cleanup_cmd])

# Start a stream. Basically calls a helper script.
def startstream(stream):
    # "s" is the stream number. 
    # "is_key" is set when a hotkey is pressed rather than back/forward.
    global s
    global is_key

    (url,desc) = stream.split(',')
    msg="Playing stream "

    if (is_key != ""):
        msg=msg+"from "+is_key
        is_key=""
    else:
        msg=msg+"#"+str(s+1)
        
    msg=msg+": "+desc
    syslog.syslog(syslog.LOG_NOTICE, msg)

    subprocess.Popen([stream_cmd, url])

# 5 second sleep... because for some reason checking for network messes up
# sometimes. 
time.sleep(5)
syslog.syslog(syslog.LOG_NOTICE, "Hi there!")
syslog.syslog(syslog.LOG_NOTICE, "Waiting for network to be available.")

# Check for network connectivity. We do this by trying 
# to resolve youtube.com. this will loop until it succeeds. 
while True:
    nointernet=10
    try:
        socket.gethostbyname("youtube.com")
    except:
        time.sleep(1)
        nointernet=1

    if (nointernet == 10):
        break

syslog.syslog(syslog.LOG_NOTICE, "Network is up!")

# Read main streams file.
with open(stream_file) as s:
    streams=s.readlines()

# Read hotkey files and yes this is stupid. 
with open(key_a_file) as a:
    stream_a=a.readline()

with open(key_b_file) as b:
    stream_b=b.readline()

with open(key_c_file) as c:
    stream_c=c.readline()

with open(key_d_file) as d:
    stream_d=d.readline()

# Hey, let's shuffle the order of the streams. 
shuffle(streams)
numstreams=len(streams)

msg=str(numstreams)+" streams detected."
syslog.syslog(syslog.LOG_NOTICE, msg)

# Also let's start at a random place on the list. 
s = random.randint(1,numstreams)
s=s-1
startstream(streams[s])

# The Touch pHAT's "Enter" button is our "forward".
@touchphat.on_release("Enter")
def back_one():
    kill_everything()

    global s
    s=s+1
    if s == numstreams:
        s = 0

    startstream(streams[s])

# The Touch pHAT's "Back" button is our, uh. Back. 
@touchphat.on_release("Back")
def forward_one():
    kill_everything()

    global s
    s=s-1
    if s == -1:
        s = (numstreams-1)

    startstream(streams[s])

# These process the hotkeys, and again, this can probably be streamlined. 
@touchphat.on_release("A")
def key_a():
    global is_key
    kill_everything()

    is_key="hotkey A"
    startstream(stream_a)

@touchphat.on_release("B")
def key_b():
    kill_everything()
    global is_key

    is_key="hotkey B"
    startstream(stream_b)

@touchphat.on_release("C")
def key_c():
    kill_everything()
    global is_key

    is_key="hotkey C"
    startstream(stream_c)

@touchphat.on_release("D")
def key_d():
    kill_everything()
    global is_key

    is_key="hotkey D"
    startstream(stream_d)


signal.pause()
